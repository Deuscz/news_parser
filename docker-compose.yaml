version: "3.9"
services:
  web:
    build: ./web
    container_name: 'flask_app'
    command: python manage.py run -h 0.0.0.0
    restart: on-failure
    environment:
        - FLASK_APP=parser/app.py
        - FLASK_ENV=development
        - DATABASE_URL=postgresql://postgres:postgres@db:5432/flask_postgres
        - SQL_HOST=db
        - SQL_PORT=5432
        - DATABASE=postgres
    ports:
        - "5000:5000"
    volumes:
        - ./web:/app
    networks:
        - rabbitmq_flask
    depends_on:
        - db
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ./rabbitmq/data/:/var/lib/rabbitmq/
        - ./rabbitmq/log/:/var/log/rabbitmq/
    networks:
        - rabbitmq_flask
  db:
    image: postgres:latest
    container_name: 'postgres_db'
    expose:
        - "5432"
    volumes:
        - postgres_db:/var/lib/postgresql/data/
    environment:
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
        - POSTGRES_DB=flask_postgres
    networks:
        - rabbitmq_flask
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:5.7
    environment:
      PGADMIN_DEFAULT_EMAIL: "snihyr.roman@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - ./pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - rabbitmq_flask
  consumer:
    build: ./web
    container_name: 'flask_consumer'
    command: python manage.py start_consume
    restart: on-failure
    environment:
        - FLASK_APP=parser/app.py
        - FLASK_ENV=development
        - DATABASE_URL=postgresql://postgres:postgres@db:5432/flask_postgres
        - SQL_HOST=db
        - SQL_PORT=5432
        - DATABASE=postgres
    volumes:
        - ./web:/app
    networks:
        - rabbitmq_flask
    links:
        - rabbitmq
    depends_on:
        - db
        - rabbitmq
networks:
  rabbitmq_flask:
    driver: bridge

volumes:
  postgres_db: